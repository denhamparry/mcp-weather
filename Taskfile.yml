version: "3"

vars:
  IMAGE_NAME: mcp-weather
  IMAGE_TAG: latest
  REGISTRY: docker.io
  REGISTRY_USER: '{{.REGISTRY_USER | default "denhamparry"}}'

tasks:
  build:
    desc: Build the Docker images
    cmds:
      - docker buildx build --platform linux/amd64,linux/arm64 -f
        Docker/Dockerfile.stdio
        -t  {{.REGISTRY}}/{{.REGISTRY_USER}}/{{.IMAGE_NAME}}:{{.IMAGE_TAG}}-stdio
        --push .
      - docker buildx build --platform linux/amd64,linux/arm64 -f
        Docker/Dockerfile.http
        -t  {{.REGISTRY}}/{{.REGISTRY_USER}}/{{.IMAGE_NAME}}:{{.IMAGE_TAG}}-http
        --push .
    silent: false
    preconditions:
      - sh: '[ -n "$REGISTRY_USER" ]'
        msg: "Please set REGISTRY_USER environment variable"

  run-stdio:
    desc: Run the Docker container with stdio transport support
    cmds:
      - docker run -it --rm -e OPENWEATHER_API_KEY={{.OPENWEATHER_API_KEY}}
        {{.IMAGE_NAME}}:{{.IMAGE_TAG}}
    silent: false
    preconditions:
      - sh: '[ -n "$OPENWEATHER_API_KEY" ]'
        msg: "Please set OPENWEATHER_API_KEY environment variable"

  run-http:
    desc: Run the Docker container with streamable HTTP transport support
    cmds:
      - docker run -it --rm -e OPENWEATHER_API_KEY={{.OPENWEATHER_API_KEY}}
        {{.IMAGE_NAME}}:{{.IMAGE_TAG}}-http
    silent: false

  clean:
    desc: Remove the Docker image
    cmds:
      - docker rmi {{.IMAGE_NAME}}:{{.IMAGE_TAG}}-stdio || true
      - docker rmi {{.IMAGE_NAME}}:{{.IMAGE_TAG}}-http || true
      - docker rmi
        {{.REGISTRY}}/{{.REGISTRY_USER}}/{{.IMAGE_NAME}}:{{.IMAGE_TAG}}-stdio ||
        true
      - docker rmi
        {{.REGISTRY}}/{{.REGISTRY_USER}}/{{.IMAGE_NAME}}:{{.IMAGE_TAG}}-http ||
        true
    silent: false
